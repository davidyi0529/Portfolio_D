{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\david\\\\My-Projects\\\\Portfolio_D\\\\src\\\\components\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useEffect } from 'react';\nexport default function ProjectCard({\n  card: {\n    img,\n    title,\n    desc,\n    demo,\n    source\n  }\n}) {\n  _s();\n\n  const thumbnail = {\n    backgroundImage: `url(${img})`\n  };\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const onImageLoaded = () => {\n      const tempImg = new Image();\n      tempImg.src = img;\n      tempImg.onload = setTimeout(() => setIsLoading(false), 1000);\n    };\n\n    onImageLoaded();\n  }, [img]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    \"data-aos\": \"flip-left\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-thumbnail\",\n      style: thumbnail,\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: isLoading && /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"overlay\",\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            duration: 0\n          },\n          exit: {\n            opacity: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-grp\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          href: demo,\n          target: \"_blank\",\n          children: \"Live Demo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          href: source,\n          target: \"_blank\",\n          variant: \"secondary\",\n          children: \"Source Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectCard, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n\n_c = ProjectCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"sources":["C:/Users/david/My-Projects/Portfolio_D/src/components/Card.js"],"names":["React","useState","Button","Card","motion","AnimatePresence","useEffect","ProjectCard","card","img","title","desc","demo","source","thumbnail","backgroundImage","isLoading","setIsLoading","onImageLoaded","tempImg","Image","src","onload","setTimeout","opacity","duration"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,eAAxC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,eAAe,SAASC,WAAT,CAAqB;AAClCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B;AAD4B,CAArB,EAEZ;AAAA;;AACD,QAAMC,SAAS,GAAG;AAChBC,IAAAA,eAAe,EAAG,OAAMN,GAAI;AADZ,GAAlB;AAIA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,IAAD,CAA1C;AAEAK,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,aAAa,GAAG,MAAM;AAC1B,YAAMC,OAAO,GAAG,IAAIC,KAAJ,EAAhB;AACAD,MAAAA,OAAO,CAACE,GAAR,GAAcZ,GAAd;AACAU,MAAAA,OAAO,CAACG,MAAR,GAAiBC,UAAU,CAAC,MAAMN,YAAY,CAAC,KAAD,CAAnB,EAA4B,IAA5B,CAA3B;AACD,KAJD;;AAKAC,IAAAA,aAAa;AACd,GAPQ,EAON,CAACT,GAAD,CAPM,CAAT;AASA,sBACE,QAAC,IAAD;AAAM,gBAAS,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAEK,SAAvC;AAAA,6BACE,QAAC,eAAD;AAAA,kBACGE,SAAS,iBACR,QAAC,MAAD,CAAQ,GAAR;AACE,UAAA,SAAS,EAAC,SADZ;AAEE,UAAA,OAAO,EAAE;AAAEQ,YAAAA,OAAO,EAAE;AAAX,WAFX;AAGE,UAAA,OAAO,EAAE;AACPA,YAAAA,OAAO,EAAE;AADF,WAHX;AAME,UAAA,UAAU,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WANd;AAOE,UAAA,IAAI,EAAE;AAAED,YAAAA,OAAO,EAAE;AAAX;AAPR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,OAAtB;AAAA,kBAA+Bd;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,kBAAYC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEC,IAAd;AAAoB,UAAA,MAAM,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEC,MAAd;AAAsB,UAAA,MAAM,EAAC,QAA7B;AAAsC,UAAA,OAAO,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAlDuBN,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Card } from 'react-bootstrap'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { useEffect } from 'react'\r\n\r\nexport default function ProjectCard({\r\n  card: { img, title, desc, demo, source },\r\n}) {\r\n  const thumbnail = {\r\n    backgroundImage: `url(${img})`,\r\n  }\r\n\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const onImageLoaded = () => {\r\n      const tempImg = new Image()\r\n      tempImg.src = img\r\n      tempImg.onload = setTimeout(() => setIsLoading(false), 1000)\r\n    }\r\n    onImageLoaded()\r\n  }, [img])\r\n\r\n  return (\r\n    <Card data-aos='flip-left'>\r\n      <div className='card-thumbnail' style={thumbnail}>\r\n        <AnimatePresence>\r\n          {isLoading && (\r\n            <motion.div\r\n              className='overlay'\r\n              initial={{ opacity: 0 }}\r\n              animate={{\r\n                opacity: 1,\r\n              }}\r\n              transition={{ duration: 0 }}\r\n              exit={{ opacity: 0 }}\r\n            >\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      <Card.Body>\r\n        <Card.Title className='title'>{title}</Card.Title>\r\n        <Card.Text>{desc}</Card.Text>\r\n        <div className='btn-grp'>\r\n          <Button href={demo} target='_blank'>\r\n            Live Demo\r\n          </Button>\r\n          <Button href={source} target='_blank' variant='secondary'>\r\n            Source Code\r\n          </Button>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}